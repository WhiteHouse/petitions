<?php
/**
 * @file
 * This is the main module file for the Petitions API Shunt.
 */

/**
 * Implements hook_shunt().
 *
 * @todo The shunt module needs a mechanism to delete dynamically generated
 * shunts.
 *
 * @todo dynamically define shunts for enabled resources.
 * This works to generate shunts, but logic is needed to implement them.
 * $endpoints = services_endpoint_load_all();
 * $resources = services_get_resources();
 *   foreach ($resources as $resource_key => $resource) {
 *     foreach ($resource as $operation_key => $operation) {
 *       foreach ($operation as $method_key => $method) {
 *         foreach ($endpoints as $endpoint) {
 *           if ($endpoint->resources[$resource_key][$operation_key][$method_key]['enabled']) {
 *             $shunt_name = 'shunt_api_' . $resource_key . '_' . $method_key . '_shunt_is_enabled';
 *             $shunt_description = 'This is a shunt for the ' . $resource_key . ' ' . $method_key . 'method.';
 *             $shunts[$shunt_name] = $shunt_description;
 *           }
 *         }
 *       }
 *     }
 *   }
 *
 * @todo Wrap the Petitions API shunts in a fieldset.
 */
function shunt_api_shunt() {
  $shunts = array(
    'shunt_api' => 'This is a shunt for the Petitions API.',
  );


  return $shunts;
}

/**
 * Implements hook_services_request_preprocess_alter().
 *
 * Allow to alter arguments before they are passed to service callback.
 *
 * @param $controller
 *   Controller definition
 * @param $args
 *   Array of arguments
 * @param $options
 *
 * @see services_controller_execute()
 * @see services.runtime.inc
 */
function shunt_api_services_request_preprocess_alter(&$controller, &$args, $options) {

  // If shunt_api has been tripped, throw a 500 error.
  if (shunt_is_enabled('shunt_api')){
    $controller['callback'] = 'shunt_api_resource_callback';
  }
}

/**
 * Replacement callback for all resources when shunt is enabled.
 */
function shunt_api_resource_callback() {
  $status_code = 500;
  $developer_message =  t("We're sorry, this service is currently unavailable.");
  $user_message = t("We're sorry, this service is currently unavailable.");
  $error_code = 73;
  $more_info = t('See issue #!code on github: https://github.com/whitehouse/petitions/issues/!code', array('!code' => $error_code));

  return api_errors_throw_error($status_code, $developer_message, $user_message, $more_info, $error_code);
}

/**
 * Implements hook_shunt_enable().
 */
function shunt_api_shunt_enable($name) {
  if ($name == 'shunt_api') {
    $text = t('CAUTION: If you have different memcache servers in front of your API site and your main website, you must trip the shunt on both sites or issue a cache clear for the shunt to actually get tripped.');
    drupal_set_message($text, 'warning');
  }
}
